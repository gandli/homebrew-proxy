---
name: Code Quality

# 触发条件
'on':
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    # 每周一凌晨 2 点运行
    - cron: 0 2 * * 1

# 权限设置
permissions:
  contents: read
  pull-requests: write
  checks: write
  security-events: write

# 环境变量
env:
  HOMEBREW_NO_AUTO_UPDATE: 1
  HOMEBREW_NO_INSTALL_CLEANUP: 1

jobs:
  # Shell 脚本质量检查
  shellcheck:
    name: ShellCheck
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run ShellCheck
        uses: ludeeus/action-shellcheck@master
        with:
          scandir: .github/scripts
          format: gcc
          severity: warning

  # YAML 文件质量检查
  yamllint:
    name: YAML Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install yamllint
        run: pip install yamllint

      - name: Run yamllint
        run: yamllint .

  # Markdown 文件质量检查
  markdownlint:
    name: Markdown Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install markdownlint
        run: npm install -g markdownlint-cli

      - name: Run markdownlint
        run: markdownlint .

  # Ruby 代码质量检查
  rubocop:
    name: RuboCop
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0
          bundler-cache: false

      - name: Install RuboCop
        run: gem install rubocop

      - name: Run RuboCop
        run: |
          if [ -d "Casks" ]; then
            rubocop Casks --format github
          else
            echo "No Casks directory found, skipping RuboCop check"
          fi

  # Pre-commit 检查
  pre-commit:
    name: Pre-commit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.x

      - name: Install pre-commit
        run: |
          # 使用 pipx 安装 pre-commit 以避免环境管理问题
          pip install --user pipx
          pipx install pre-commit

      - name: Cache pre-commit
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ runner.os }}-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            pre-commit-${{ runner.os }}-

      - name: Run pre-commit
        run: pre-commit run --all-files

  # 代码质量综合检查
  quality-check:
    name: Quality Check
    runs-on: macos-latest
    needs: [shellcheck, yamllint, markdownlint, rubocop]
    if: always()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: Install development tools
        run: |
          # 安装必要的工具
          brew install shellcheck
          # 使用 pipx 安装 Python 工具以避免环境管理问题
          brew install pipx
          pipx install yamllint
          npm install -g markdownlint-cli
          gem install rubocop

      - name: Make scripts executable
        run: |
          chmod +x .github/scripts/*.sh

      - name: Run comprehensive quality check
        run: |
          ./.github/scripts/dev-tools.sh quality

      - name: Generate quality report
        if: always()
        run: |
          echo "# Code Quality Report" > quality-report.md
          echo "" >> quality-report.md
          echo "## Summary" >> quality-report.md
          echo "" >> quality-report.md

          # 检查各个工具的状态
          if command -v shellcheck >/dev/null 2>&1; then
            echo "- ✅ ShellCheck: Available" >> quality-report.md
          else
            echo "- ❌ ShellCheck: Not available" >> quality-report.md
          fi

          if command -v yamllint >/dev/null 2>&1; then
            echo "- ✅ yamllint: Available" >> quality-report.md
          else
            echo "- ❌ yamllint: Not available" >> quality-report.md
          fi

          if command -v markdownlint >/dev/null 2>&1; then
            echo "- ✅ markdownlint: Available" >> quality-report.md
          else
            echo "- ❌ markdownlint: Not available" >> quality-report.md
          fi

          if command -v rubocop >/dev/null 2>&1; then
            echo "- ✅ RuboCop: Available" >> quality-report.md
          else
            echo "- ❌ RuboCop: Not available" >> quality-report.md
          fi

          echo "" >> quality-report.md
          echo "## File Statistics" >> quality-report.md
          echo "" >> quality-report.md

          # 统计文件数量
          cask_count=$(find Casks -name "*.rb" 2>/dev/null | wc -l | tr -d ' ' || echo "0")
          script_count=$(find .github/scripts -name "*.sh" 2>/dev/null | wc -l | tr -d ' ' || echo "0")
          yaml_count=$(find . -name "*.yml" -o -name "*.yaml" 2>/dev/null | wc -l | tr -d ' ' || echo "0")
          md_count=$(find . -name "*.md" 2>/dev/null | wc -l | tr -d ' ' || echo "0")

          echo "- 📦 Cask files: $cask_count" >> quality-report.md
          echo "- 📜 Shell scripts: $script_count" >> quality-report.md
          echo "- 📄 YAML files: $yaml_count" >> quality-report.md
          echo "- 📚 Markdown files: $md_count" >> quality-report.md

      - name: Upload quality report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: quality-report
          path: quality-report.md
          retention-days: 30

  # 安全检查
  security-check:
    name: Security Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: fs
          scan-ref: .
          format: sarif
          output: trivy-results.sarif

      - name: Upload Trivy scan results
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-results.sarif

  # 依赖检查
  dependency-check:
    name: Dependency Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for secrets in filesystem
        if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          extra_args: --debug --only-verified

      - name: Check for secrets in commits
        if: github.event_name == 'push' || github.event_name == 'pull_request'
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: >
            ${{ github.event_name == 'pull_request' && github.event.pull_request.base.sha ||
                github.event_name == 'push' && github.event.before != '0000000000000000000000000000000000000000' &&
                github.event.before || 'HEAD~1' }}
          head: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || github.sha }}
          extra_args: --debug --only-verified
        continue-on-error: true

      - name: Fallback filesystem scan
        if: (github.event_name == 'push' || github.event_name == 'pull_request') && failure()
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          extra_args: --debug --only-verified
        continue-on-error: true

  # 结果汇总
  quality-summary:
    name: Quality Summary
    runs-on: ubuntu-latest
    needs: [shellcheck, yamllint, markdownlint, rubocop, pre-commit, quality-check, security-check, dependency-check]
    if: always()
    steps:
      - name: Check results
        run: |
          echo "Quality check results:"
          echo "- ShellCheck: ${{ needs.shellcheck.result }}"
          echo "- YAML Lint: ${{ needs.yamllint.result }}"
          echo "- Markdown Lint: ${{ needs.markdownlint.result }}"
          echo "- RuboCop: ${{ needs.rubocop.result }}"
          echo "- Pre-commit: ${{ needs.pre-commit.result }}"
          echo "- Quality Check: ${{ needs.quality-check.result }}"
          echo "- Security Check: ${{ needs.security-check.result }}"
          echo "- Dependency Check: ${{ needs.dependency-check.result }}"

          # 检查是否有失败的作业
          if [[ "${{ needs.shellcheck.result }}" == "failure" || \
                "${{ needs.yamllint.result }}" == "failure" || \
                "${{ needs.markdownlint.result }}" == "failure" || \
                "${{ needs.rubocop.result }}" == "failure" || \
                "${{ needs.pre-commit.result }}" == "failure" || \
                "${{ needs.quality-check.result }}" == "failure" || \
                "${{ needs.security-check.result }}" == "failure" || \
                "${{ needs.dependency-check.result }}" == "failure" ]]; then
            echo "❌ Some quality checks failed"
            exit 1
          else
            echo "✅ All quality checks passed"
          fi
